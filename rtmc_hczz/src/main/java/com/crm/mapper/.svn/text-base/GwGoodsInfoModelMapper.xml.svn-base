<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gw.goodsInfo">
	<resultMap id="BaseResultMap" type="com.crm.pojo.GwGoodsInfoModel">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="goods_tree_id" property="goodsTreeId" jdbcType="INTEGER" />
		<result column="goods_tree_fid" property="goodsTreeFid" jdbcType="INTEGER" />
		<result column="money" property="money" jdbcType="DECIMAL" />
		<result column="create_user" property="createUser" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_user" property="updateUser" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="goodsTypeName" property="goodsTypeName" jdbcType="VARCHAR" />
		<result column="updateUserName" property="updateUserName" jdbcType="VARCHAR" />
		<result column="createUserName" property="createUserName" jdbcType="VARCHAR" />
		<result column="shops_lease_code" property="shopsLeaseCode" jdbcType="VARCHAR" />
		<result column="shopsLeaseName" property="shopsLeaseName" jdbcType="VARCHAR" />
		<result column="goodTreeFName" property="goodTreeFName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, code, name, goods_tree_id, money, create_user,
		create_time,
		update_user, update_time,
		remark, state,shops_lease_code,goods_tree_fid
	</sql>

	<!-- 批量插入 -->
	<insert id="gw.goodsInfo.batchinsert" parameterType="com.crm.pojo.GwGoodsInfoModel">
		insert into gw_goods_info (
		id,
		code,
		name,
		goods_tree_id,
		money,
		create_user,
		create_time,
		update_user,
		update_time,
		remark,
		state,shops_lease_code,
		goods_tree_fid
		)
		values
		<foreach collection="list" item="goodsInfoList" index="index"
			separator=",">
			(
			#{goodsInfoList.id,jdbcType=INTEGER},
			#{goodsInfoList.code,jdbcType=VARCHAR},
			#{goodsInfoList.name,jdbcType=VARCHAR},
			#{goodsInfoList.goodsTreeId,jdbcType=INTEGER},
			#{goodsInfoList.money,jdbcType=DECIMAL},
			#{goodsInfoList.createUser,jdbcType=INTEGER},
			#{goodsInfoList.createTime,jdbcType=VARCHAR},
			#{goodsInfoList.updateUser,jdbcType=INTEGER},
			#{goodsInfoList.updateTime,jdbcType=VARCHAR},
			#{goodsInfoList.remark,jdbcType=VARCHAR},
			#{goodsInfoList.state,jdbcType=INTEGER},
			#{goodsInfoList.shopsLeaseCode,jdbcType=VARCHAR},
			#{goodsInfoList.goodsTreeFid,jdbcType=INTEGER}
			)
		</foreach>
	</insert>
	<!-- 批量更新数据 -->
	<update id="gw.goodsInfo.batchUpdate" parameterType="java.util.List">
		<foreach collection="list" item="goodsInfoList" index="index"
			separator=";">
			update gw_goods_info
			<set>
				id=#{goodsInfoList.id,jdbcType=INTEGER},
				code=#{goodsInfoList.code,jdbcType=INTEGER},
				name=#{goodsInfoList.name,jdbcType=VARCHAR},
				shops_lease_code=#{goodsInfoList.shopsLeaseCode,jdbcType=VARCHAR},
				goods_tree_id=#{goodsInfoList.goodsTreeId,jdbcType=INTEGER},
				goods_tree_fid=#{goodsInfoList.goodsTreeFid,jdbcType=VARCHAR},
				money=#{goodsInfoList.money,jdbcType=INTEGER},
				create_user=#{goodsInfoList.createUser,jdbcType=INTEGER},
				create_time=#{goodsInfoList.createTime,jdbcType=INTEGER},
				update_user=#{goodsInfoList.updateUser,jdbcType=INTEGER},
				update_time=#{goodsInfoList.updateTime,jdbcType=INTEGER},
				remark=#{goodsInfoList.remark,jdbcType=INTEGER},
				state=#{goodsInfoList.state,jdbcType=INTEGER}
			</set>
			where id = #{goodsInfoList.id,jdbcType=INTEGER}
		</foreach>
	</update>

	<!-- 批量删除 -->
	<delete id="gw.goodsInfo.batchDelete" parameterType="java.util.List">
		delete from gw_goods_info where id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item.id}
		</foreach>
	</delete>


	<select id="gw.goodsInfo.selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		a.id,
		a.code,
		a.name,
		a.goods_tree_id,
		a.money,
		a.create_user,
		a.create_time,
		a.update_user,
		a.update_time,
		a.remark,
		a.state,
		a.shops_lease_code,
		a.goods_tree_fid,
		(select c.`name` from
		gw_shops_lease c where c.`code` = a.shops_lease_code)as
		shopsLeaseName,
		b.name as goodsTypeName
		from gw_goods_info
		a,gw_goods_tree b
		where a.id = #{id,jdbcType=INTEGER}
		and
		a.goods_tree_id = b.id
	</select>
	<select id="gw.goodsInfo.selectList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from gw_goods_info
	</select>
	<select id="gw.goodsInfo.selectBycode" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from gw_goods_info
		where code = #{code,jdbcType=VARCHAR}
	</select>
	<delete id="gw.goodsInfo.deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from gw_goods_info
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<delete id="gw.goodsInfo.deleteAll" parameterType="java.lang.Integer">
		delete from
		gw_goods_info
	</delete>



	<insert id="gw.goodsInfo.insert" parameterType="com.crm.pojo.GwGoodsInfoModel">
		insert into gw_goods_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="goodsTreeId != null">
				goods_tree_id,
			</if>
			<if test="goodsTreeFid != null">
				goods_tree_fid,
			</if>
			<if test="shopsLeaseCode != null">
				shops_lease_code,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="state != null">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="goodsTreeId != null">
				#{goodsTreeId,jdbcType=INTEGER},
			</if>
			<if test="goodsTreeFid != null">
				#{goodsTreeFid,jdbcType=INTEGER},
			</if>
			<if test="shopsLeaseCode != null">
				#{shopsLeaseCode,jdbcType=INTEGER},
			</if>
			<if test="money != null">
				#{money,jdbcType=DECIMAL},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="gw.goodsInfo.update" parameterType="com.crm.pojo.GwGoodsInfoModel">
		update gw_goods_info
		<set>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="goodsTreeId != null">
				goods_tree_id = #{goodsTreeId,jdbcType=INTEGER},
			</if>
			<if test="goodsTreeFid != null">
				goods_tree_fid = #{goodsTreeFid,jdbcType=INTEGER},
			</if>
			<if test="shopsLeaseCode != null">
				shops_lease_code = #{shopsLeaseCode,jdbcType=INTEGER},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=DECIMAL},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 根据条件，获取分页数据list集合 -->
	<select id="gw.goodsInfo.selectPageList" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		a.create_user,
		(select b.`name` from gw_admin_users
		b where b.id =
		a.create_user)as
		createUserName,
		a.id,
		a.`name`,
		a.state,
		a.update_time,
		a.update_user,
		a.code,
		a.create_time,
		a.update_user,
		a.goods_tree_id,
		a.money,
		a.remark,
		(select b.`name` from gw_admin_users
		b where b.id =
		a.update_user)as
		updateUserName,
		a.shops_lease_code,
		(select c.`name`
		from gw_shops_lease c where c.`code` = a.shops_lease_code)as
		shopsLeaseName,
		b.name as goodsTypeName,
		(select g.name from
		gw_goods_tree g where g.id = a.goods_tree_fid)as goodTreeFName
		FROM
		gw_goods_info a,gw_goods_tree b
		where
		a.goods_tree_id = b.id
		<if test="name != null and '' != name">
			and a.name LIKE CONCAT(CONCAT('%',
			#{name,jdbcType=VARCHAR}), '%')
		</if>
		<if test="code != null and '' != code">
			and a.code LIKE CONCAT(CONCAT('%',
			#{code,jdbcType=VARCHAR}), '%')
		</if>
		<if test="goodsTreeId != null and '' != goodsTreeId">
			and a.goods_tree_id =#{goodsTreeId,jdbcType=INTEGER}
		</if>
		<if test="shopsLeaseCode != null and '' != shopsLeaseCode">
			and a.shops_lease_code =#{shopsLeaseCode,jdbcType=VARCHAR}
		</if>
		and
		a.state =1
		order by a.create_time desc
		limit
		#{offset,jdbcType=INTEGER} ,
		#{pageSize,jdbcType=INTEGER}
	</select>
	<select id="gw.goodsInfo.selectCount" resultType="java.lang.Integer"
		parameterType="java.util.Map">
		select
		count(a.id)
		from
		gw_goods_info a where a.state =1
		<if test="name != null and '' != name">
			and a.name LIKE CONCAT(CONCAT('%',
			#{name,jdbcType=VARCHAR}), '%')
		</if>
		<if test="code != null and '' != code">
			and a.code LIKE CONCAT(CONCAT('%',
			#{code,jdbcType=VARCHAR}), '%')
		</if>
		<if test="goodsTreeId != null and '' != goodsTreeId">
			and a.goods_tree_id =#{goodsTreeId,jdbcType=INTEGER}
		</if>
		<if test="shopsLeaseCode != null and '' != shopsLeaseCode">
			and a.shops_lease_code =#{shopsLeaseCode,jdbcType=VARCHAR}
		</if>
	</select>

	<select id="gw.goodsInfo.getGoodsInfoByShopsLeaseCodeApi"
		resultMap="BaseResultMap">
		SELECT
		a.`code`,
		a.create_time,
		a.create_user,
		a.goods_tree_id,
		a.id,
		a.money,
		a.goods_tree_id,
		(select b.`name` from gw_goods_tree b where
		b.id = a.goods_tree_id)as
		goodsTypeName,
		(select g.name from
		gw_goods_tree g where g.id = a.goods_tree_fid)as
		goodTreeFName,
		a.`name`,
		a.remark,
		a.shops_lease_code,
		(select c.`name` from
		gw_shops_lease c where c.`code` = a.shops_lease_code)as
		shopsLeaseName,
		a.state,
		a.update_time,
		a.update_user
		FROM
		gw_goods_info a
		<where>
			<if test="shopsLeaseCode != null and '' != shopsLeaseCode">
				and a.shops_lease_code
				=#{shopsLeaseCode,jdbcType=VARCHAR}
			</if>
			and a.state !=0
		</where>
	</select>
</mapper>