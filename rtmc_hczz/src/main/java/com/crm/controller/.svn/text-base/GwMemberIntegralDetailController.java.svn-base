package com.crm.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.crm.common.BasePageResultVo;
import com.crm.common.BaseResultVo;
import com.crm.common.LigerPageDataVo;
import com.crm.enums.IntergralTypeEnum;
import com.crm.enums.MemberIntegralDetailEnum;
import com.crm.interceptor.exception.BaseException;
import com.crm.pojo.GwMemberIntegralDetailModel;
import com.crm.service.GwMemberIntegralDetailService;
import com.crm.util.ExcelUtil;


@Controller
@RequestMapping("/memberIntegralDetail")
public class GwMemberIntegralDetailController extends BaseException {
	private Logger logger = LoggerFactory.getLogger(GwMemberIntegralDetailController.class);
	
	@Resource(name = "gwMemberIntegralDetailServiceManage")
	private GwMemberIntegralDetailService gwMemberIntegralDetailServiceImpl;
	/**
	 * 
	 * getMemberIntegralDetailById: 根据ID获取会员信息
	 * 
	 * @author hanzhiqiang
	 * @date 2016年11月2日
	 * @return
	 */
	@RequestMapping("/getMemberIntegralDetailById.do")
	@ResponseBody
	public BaseResultVo getMemberIntegralDetailById(int id, HttpServletRequest request) {
		//获取会员信息
		GwMemberIntegralDetailModel memberIntegralDetai=gwMemberIntegralDetailServiceImpl.selectById(id);
		if(memberIntegralDetai==null){
			return BaseResultVo.responseFail("获取会员信息失败");
		}
		BaseResultVo baseResultVo=BaseResultVo.responseSuccess("获取会员信息成功");
		baseResultVo.setData(memberIntegralDetai);
		return baseResultVo;
	}
	/**
	 *
	 * getMemberIntegralDetailList:获取会员信息列表（分页）
	 *
	 * @author   hanzhiqiang
	 * @date     2016年11月2日
	 *
	 * @param currentPage  
	 * 					当前页
	 * @param pageSize  
	 * 				每页记录数
	 * @return
	 */
	@RequestMapping("/getMemberIntegralDetailList.do")
	@ResponseBody
	public LigerPageDataVo getMemberIntegralDetailList(String startTime, String endTime,String memberCode,String cardCode,int currentPage, int pageSize, HttpServletRequest request) {
		// 条件参数
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("currentPage", currentPage);
		params.put("pageSize", pageSize);
		params.put("memberCode", memberCode);
		params.put("cardCode", cardCode);
		// 根据开始时间查询
		params.put("startTime", startTime);
		// 根据结束时间查询
		params.put("endTime", endTime);

		BasePageResultVo baseResultVo = gwMemberIntegralDetailServiceImpl.selectPageList(params);
		// liger ui 分页格式数据
		LigerPageDataVo data = new LigerPageDataVo();
		data.setRows(baseResultVo.getRows());
		data.setTotal(baseResultVo.getPageInfo().getTotalRecord());
		return data;
	}
	
	/**
	 * 
	 * getAllmemberIntegralDetails:获取所有会员信息集合
	 *
	 * @date 2016年11月7日
	 * @return
	 */
	@RequestMapping("/getAllmemberIntegralDetails.do")
	@ResponseBody
	public Object getAllmemberIntegralDetails(Integer intergralType){
		Map<String,Object> params = new HashMap<>();
		params.put("intergralType", MemberIntegralDetailEnum.PLATFORM.getValue());
		params.put("intergralType", MemberIntegralDetailEnum.SALEROOM.getValue());
		params.put("intergralType", MemberIntegralDetailEnum.SELLRETURN.getValue());
		params.put("intergralType", MemberIntegralDetailEnum.CREDITSEXCHANGE.getValue());
		params.put("intergralType", MemberIntegralDetailEnum.WECHATINTEGRAL.getValue());
		//获取所有会员信息集合
		List<GwMemberIntegralDetailModel> memberIntegralDetail=gwMemberIntegralDetailServiceImpl.getDetailByCondition(params);
		return memberIntegralDetail;
	}
	@RequestMapping("getMemberIntegralDetailBymemberIntegralDetailIntergralType.do")
	@ResponseBody
	public LigerPageDataVo getMemberIntegralDetailBymemberIntegralDetailIntergralType(String[] memberIntegralDetailIntergralType,HttpServletRequest request){
		List<GwMemberIntegralDetailModel> gwMemberIntegralDetailList = new ArrayList<>();
		//liger ui 分页格式数据
		LigerPageDataVo data=new LigerPageDataVo();
		data.setRows(gwMemberIntegralDetailList);
		data.setTotal(gwMemberIntegralDetailList.size());
		return data;
	}
	
	@RequestMapping("delMemberIntegralDetail.do")
	@ResponseBody
	public BaseResultVo delMemberIntegralDetail(int id, HttpServletRequest request) {
		if(id==0){
			return BaseResultVo.responseFail("数据异常");
		}
		int number=gwMemberIntegralDetailServiceImpl.deleteById(id);
		if(number>0){
			return BaseResultVo.responseSuccess("操作成功");
		}else{
			return BaseResultVo.responseSuccess("删除失败");
		}
		
	}
	/**
	 *
	 * exportMemberIntegralDetail:导出会员信息明细
	 *
	 * @author   hanzhiqiang
	 * @date     2016年11月2日
	 *
	 * @param currentPage  
	 * 					当前页
	 * @param pageSize  
	 * 				每页记录数
	 * @return
	 */
	@RequestMapping("/exportMemberIntegralDetail.do")
	@ResponseBody
	public BaseResultVo exportMemberIntegralDetail(HttpServletRequest request,HttpServletResponse response) {
		Map<String, Object> params = new HashMap<String, Object>();
		List<GwMemberIntegralDetailModel> memberIntegralDetail = gwMemberIntegralDetailServiceImpl.getExportMemberIntegralDetail(params);
		List<GwMemberIntegralDetailModel> memberIntegralDetailNew=new ArrayList<>();
		for (GwMemberIntegralDetailModel model : memberIntegralDetail) {
			if(model.getCardCode()==null){
				model.setCardCode("");
			}	
			model.setIntergralTypeName(IntergralTypeEnum.getDisplayName(model.getIntergralType()));
			memberIntegralDetailNew.add(model);
		}
		String sheetName="会员积分明细";
		String[] headerAtrr={"会员VIP号","会员卡号","会员积分数","积分类型","备注（积分来源信息）","积分时间"};
		String[] columnArr={"memberCode","cardCode","intergralNum","intergralTypeName","note","intergralTime"};
		int[] colWidthArr={30,30,30,30,30,30};
		boolean number= ExcelUtil.exportExcel(sheetName,memberIntegralDetailNew,columnArr, headerAtrr, colWidthArr, request, response);
		if(number==false){
			return BaseResultVo.responseFail("导出失败");
		}
		return BaseResultVo.responseSuccess("导出成功");
	}
}

