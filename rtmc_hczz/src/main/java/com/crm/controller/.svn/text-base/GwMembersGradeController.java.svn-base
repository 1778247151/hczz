package com.crm.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.crm.common.BasePageResultVo;
import com.crm.common.BaseResultVo;
import com.crm.common.LigerPageDataVo;
import com.crm.common.QueryConditon;
import com.crm.common.ResponseCode;
import com.crm.common.SecurityUtil;
import com.crm.common.Status;
import com.crm.enums.gwTypeTreeEnum;
import com.crm.enums.gwTypeTreeStatusEnum;
import com.crm.interceptor.exception.BaseException;
import com.crm.pojo.GwBaseIntegralModel;
import com.crm.pojo.GwMemberGradeModel;
import com.crm.pojo.GwMembersModel;
import com.crm.pojo.GwTypeTreeModel;
import com.crm.service.GwBaseIntegralService;
import com.crm.service.GwMemberGradeService;
import com.crm.service.GwMembersService;
import com.crm.service.GwTypeTreeService;
import com.crm.util.DateUtil;
import com.crm.util.QueryConditionUtil;


/**
 * 
 * GwMembersGradeController:会员级别控制层
 *
 * @author xiangtao
 * @date 2016年6月20日
 * @version jdk.8
 *
 */
@Controller
@RequestMapping("/membersgrade")
public class GwMembersGradeController extends BaseException {

	// 日志
	private Logger logger = LoggerFactory.getLogger(GwMembersGradeController.class);

	/**
	 * 类型树业务逻辑
	 */
	@Resource(name = "gwTypeTreeServiceManage")
	private GwTypeTreeService gwTypeTreeServiceImpl;
	/**
	 * 会员等级积分设置业务逻辑
	 */
	@Resource(name = "gwMemberGradeServiceManage")
	private GwMemberGradeService gwMemberGradeServiceImpl;

	/**
	 * 基础积分规则业务逻辑
	 */
	@Resource(name = "gwBaseIntegralServiceManage")
	private GwBaseIntegralService gwBaseIntegralServiceImpl;

	/**
	 * 会员业务逻辑
	 */
	@Resource(name = "gwMembersServiceManage")
	private GwMembersService gwMembersServiceImpl;
	/**
	 * 
	 * getMembersGradeById:根据级别id，获取级别信息
	 *
	 * @date 206年3月5日
	 * @param id
	 * @param request
	 * @return
	 */
	@RequestMapping("/getMembersGradeById.do")
	@ResponseBody
	public BaseResultVo getMembersGradeById(int id, HttpServletRequest request) {
		BaseResultVo baseResultVo = new BaseResultVo();
		Status status = new Status();
		status.setCode(ResponseCode.OPR_SUCCESS);// 提示代码
		status.setMsg("操作成功");// 提示信息
		status.setDebugMsg("");// bug信息
		status.setUrl("");// url

		if (id == 0) {
			status.setCode(ResponseCode.OPR_FAIL);
			status.setMsg("数据异常");// 提示信息
			baseResultVo.setStatus(status);
			return baseResultVo;
		}

		// 获取级别信息
		GwTypeTreeModel gwTypeTreeModel = gwTypeTreeServiceImpl.selectById(id);
		baseResultVo.setData(gwTypeTreeModel);
		baseResultVo.setStatus(status);
		return baseResultVo;
	}
	
	/**
	 * addMembersGrade 添加级别
	 * 
	 * @date 2016年6月20日
	 * @param
	 * @return
	 */
	@RequestMapping("/addMembersGrade.do")
	@ResponseBody
	public BaseResultVo addMembersGrade(GwTypeTreeModel gwTypeTreeModel,HttpServletRequest request){
		GwTypeTreeModel t = gwTypeTreeServiceImpl.getTypeTreeByCode(gwTypeTreeModel.getCode());
		if(t!=null){
			return BaseResultVo.responseFail("编号已存在");
		}
		
		Integer userid = SecurityUtil.getAdminUser(request).getUserId();
		gwTypeTreeModel.setCreateUserId(userid);
		gwTypeTreeModel.setCreateTime(DateUtil.getCurrentDatetime("-"));
		gwTypeTreeModel.setUpdateUserId(userid);
		gwTypeTreeModel.setUpdateTime(DateUtil.getCurrentDatetime("-"));
		
		gwTypeTreeModel.setType(gwTypeTreeEnum.type_ONE.getStringValue());
		
		gwTypeTreeServiceImpl.insert(gwTypeTreeModel);
		
		BaseResultVo baseResultVo = new BaseResultVo();
		Status status = new Status();
		status.setCode(ResponseCode.OPR_SUCCESS);// 提示代码
		status.setMsg("操作成功");// 提示信息
		status.setDebugMsg("");// bug信息
		status.setUrl("");// url
		
		baseResultVo.setStatus(status);
		return baseResultVo;
	}
	
	/**
	 * 
	 * delMembersgrade:根据级别id，删除级别
	 *
	 * @date 2016年6月20日
	 * @param id
	 *            级别id
	 * @param request
	 * @return
	 */
	@RequestMapping("/delMembersgrade.do")
	@ResponseBody
	public BaseResultVo delMembersgrade(int id, HttpServletRequest request) {
		BaseResultVo baseResultVo = new BaseResultVo();
		Status status = new Status();
		status.setCode(ResponseCode.OPR_SUCCESS);// 提示代码
		status.setMsg("操作成功");// 提示信息
		status.setDebugMsg("");// bug信息
		status.setUrl("");// url

		if (id == 0) {
			status.setCode(ResponseCode.OPR_FAIL);
			status.setMsg("数据异常");// 提示信息
			baseResultVo.setStatus(status);
			return baseResultVo;
		}

		int num = gwTypeTreeServiceImpl.deleteById(id);
		if (num < 0) {
			status.setCode(ResponseCode.OPR_FAIL);
			status.setMsg("操作失败");// 提示信息
		}
		baseResultVo.setStatus(status);
		return baseResultVo;
	}
	
	
	/**
	 * 
	 * updateMembersGrade:更新级别
	 *
	 * @date 2016年6月20日
	 * @param gwTypeTreeModel
	 *            级别信息对象
	 * @return
	 */
	@RequestMapping("/updateMembersGrade.do")
	@ResponseBody
	public BaseResultVo updateMembersGrade(GwTypeTreeModel gwTypeTreeModel,HttpServletRequest request) {
		BaseResultVo baseResultVo = new BaseResultVo();
		Status status = new Status();
		status.setCode(ResponseCode.OPR_SUCCESS);// 提示代码
		status.setMsg("操作成功");// 提示信息
		status.setDebugMsg("");// bug信息
		status.setUrl("");// url

		// 验证主键是否为空
		if (gwTypeTreeModel.getId() == 0) {
			status.setCode(ResponseCode.OPR_FAIL);
			status.setMsg("数据异常");
			baseResultVo.setStatus(status);
			return baseResultVo;
		}
		//等级编号
		String code= gwTypeTreeModel.getCode();
		List<GwMembersModel> membersList = gwMembersServiceImpl.getAllList();
		for (GwMembersModel gwMembersModel : membersList) {
			if (gwMembersModel.getGrade() != null) {
				if (gwMembersModel.getType().equals(code)) {
					status.setCode(ResponseCode.OPR_FAIL);
					status.setMsg("编号已生成会员信息，不能更改");// 提示信息
					baseResultVo.setStatus(status);
					return baseResultVo;
				}
			}
		}
		// 更新时间
		gwTypeTreeModel.setUpdateTime(DateUtil.getCurrentDatetime("-"));
		int userid = SecurityUtil.getAdminUser(request).getUserId();
		gwTypeTreeModel.setUpdateUserId(userid);

		// 更新级别信息
		gwTypeTreeServiceImpl.update(gwTypeTreeModel);
		baseResultVo.setStatus(status);
		return baseResultVo;
	}
	
	
	
	/**
	 * 
	 * getMembersGradeList:获取级别集合（分页）
	 *
	 * @date 2016年6月20日
	 * @param page
	 *            当前页码数
	 * @param pagesize
	 *            每页显示记录数
	 * @param request
	 * @return
	 */
	@RequestMapping("/getMembersGradeList.do")
	@ResponseBody
	public LigerPageDataVo getMembersGradeList(int currentPage, int pageSize, HttpServletRequest request) {
		// 条件参数
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("currentPage", currentPage);
		params.put("pageSize", pageSize);
		
		List<GwTypeTreeModel> list = gwTypeTreeServiceImpl.getTypeTreeByType(gwTypeTreeEnum.type_ONE.getStringValue());
		
		// liger ui 分页格式数据
		LigerPageDataVo data = new LigerPageDataVo();
		data.setRows(list);
		data.setTotal(list.size());
		return data;
	}
	
}
