package com.crm.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.crm.common.BasePageResultVo;
import com.crm.common.BaseResultVo;
import com.crm.common.LigerPageDataVo;
import com.crm.interceptor.exception.BaseException;
import com.crm.pojo.GwAresModel;
import com.crm.pojo.GwGroupInfoModel;
import com.crm.service.GwAresService;
import com.crm.util.DateUtil;
import com.crm.util.ValidateUtil;
/**
 * 
 * GwAresController:区域管理  访问控制层
 *
 * @author yumaochun
 * @date  2016年3月10日
 * @version  jdk1.8
 *
 */
@Controller
@RequestMapping("/ares")
public class GwAresController extends BaseException{
	
	/**
	 * 区域管理业务逻辑
	 */
	@Resource(name="gwAresServiceManage")
	private GwAresService gwAresServiceImpl;
	
	/**
	 * 
	 * addAres:添加区域
	 *
	 * @date 2016年3月10日 
	 * @param ares            区域信息对象
	 * @return
	 */
	@RequestMapping("/addAres.do")
	@ResponseBody
	public BaseResultVo addAres(GwAresModel ares){
		
		if(!ValidateUtil.isAvailableLength(ares.getBm(), 5, 10)){
			return BaseResultVo.responseFail("区域编号为5-10位的字符字符");
		}
		if(!ValidateUtil.isLengthRangeStr(ares.getCnName(),3,15)){
			return BaseResultVo.responseFail("区域中文名称为3-15位的字符串");
		}
		if(!ValidateUtil.isLengthRangeStr(ares.getEnName(),3,15)){
			return BaseResultVo.responseFail("区域英文名称为3-15位的字符串");
		}
		GwAresModel aresModel = gwAresServiceImpl.getAresModelByCode(ares.getBm());
		if(aresModel!=null){
			return BaseResultVo.responseFail("区域编号已存在");
		}
		ares.setTime(DateUtil.getCurrentDatetime("-"));
		
		int num=gwAresServiceImpl.insert(ares);
		if(num<0){
			BaseResultVo.responseFail("添加区域失败");
		}
		
		return BaseResultVo.responseSuccess("添加区域成功");
	}
	/**
	 * 
	 * getAresPageList:区域管理
	 *
	 * @date 2016年3月10日
	 * @param currentPage     当前页码
	 * @param pageSize        每页显示记录数
	 * @param request
	 * @return
	 */
	@RequestMapping("/getAresPageList.do")
	@ResponseBody
	public LigerPageDataVo getAresPageList(int currentPage,int pageSize,HttpServletRequest request){
		
		//条件参数
		Map<String, Object> params=new HashMap<String, Object>();
		params.put("currentPage", currentPage);
		params.put("pageSize", pageSize);
				
		BasePageResultVo baseResultVo=gwAresServiceImpl.selectPageList(params);
		//liger ui 分页格式数据
		LigerPageDataVo data=new LigerPageDataVo();
		data.setRows(baseResultVo.getRows());
		data.setTotal(baseResultVo.getPageInfo().getTotalRecord());
		return data;
	}
	/**
	 * 
	 * getAresById:根据区域id，获取区域信息
	 *
	 * @date 206年3月5日
	 * @param id
	 * @param request
	 * @return
	 */
	@RequestMapping("/getAresById.do")
	@ResponseBody
	public BaseResultVo getAresById(int id,HttpServletRequest request){
		if(id==0){
			return BaseResultVo.responseFail("数据异常");
		}
		//获取区域信息
		GwAresModel ares=gwAresServiceImpl.selectById(id);
		if(ares==null){
			return BaseResultVo.responseFail("获取区域失败");
		}
		BaseResultVo baseResultVo=BaseResultVo.responseSuccess("获取区域成功");
		baseResultVo.setData(ares);
		return baseResultVo;
	}
	/**
	 * 
	 * deleteAresById:根据区域id，删除区域
	 *
	 * @date 206年3月5日
	 * @param id                  区域id
	 * @param request
	 * @return
	 */
	@RequestMapping("/deleteAresById.do")
	@ResponseBody
	public BaseResultVo deleteAresById(int id,HttpServletRequest request){
		if(id==0){
			return BaseResultVo.responseFail("数据异常");
		}
		//新建一个区域对象
		GwAresModel ares = new GwAresModel();
		ares.setId(id);
		ares.setState(0);
		int num=gwAresServiceImpl.update(ares);
		if(num<0){
			return BaseResultVo.responseFail("删除区域失败");
		}
		return BaseResultVo.responseSuccess("删除区域成功");
	}
	/**
	 * 
	 * updateRole:更新区域信息
	 *
	 * @date 2016年3月5日
	 * @param Ares       区域信息对象
	 * @return
	 */
	@RequestMapping("/updateAres.do")
	@ResponseBody
	public BaseResultVo updateAres(GwAresModel ares){
		
		//验证主键是否为空
		if(ares.getId()==0){
			return BaseResultVo.responseFail("数据异常");
		}
		if(!ValidateUtil.isAvailableLength(ares.getBm(), 5, 10)){
			return BaseResultVo.responseFail("区域编号为5-10位的字符字符");
		}
		if(!ValidateUtil.isLengthRangeStr(ares.getCnName(),3,15)){
			return BaseResultVo.responseFail("区域中文名称为3-15位的字符串");
		}
		if(!ValidateUtil.isLengthRangeStr(ares.getEnName(),3,15)){
			return BaseResultVo.responseFail("区域英文名称为3-15位的字符串");
		}
		//更新时间
		ares.setTime(DateUtil.getCurrentDatetime("-"));
		GwAresModel aresModel=gwAresServiceImpl.selectById(ares.getId());
		GwAresModel aresModel1 = gwAresServiceImpl.getAresModelByCode(ares.getBm());
		if(!aresModel.getBm().equals(ares.getBm())&&aresModel1!=null){
			return BaseResultVo.responseFail("区域编号已存在");
		}
		//更新就团信息
		int num=gwAresServiceImpl.update(ares);
		if(num<=0){
			return BaseResultVo.responseFail("更新区域失败");
		}
		
		return BaseResultVo.responseSuccess("更新区域成功");
	}
	/**
	 * 
	 * getAresList:获取所有区域集合
	 *
	 * @date 2016年3月7日
	 * @return
	 */
	@RequestMapping("/getAresList.do")
	@ResponseBody
	public Object getAresList(){

		//获取所有区域
		List<GwAresModel> AresList=gwAresServiceImpl.getAllList();
		List<HashMap<String,Object>> list=new ArrayList<HashMap<String,Object>>();
		for (GwAresModel area : AresList) {
			HashMap<String,Object> map=new HashMap<String,Object>();
			map.put("id", area.getId());
			map.put("text", area.getCnName());
			list.add(map);
		}
		return list;
	}

}
