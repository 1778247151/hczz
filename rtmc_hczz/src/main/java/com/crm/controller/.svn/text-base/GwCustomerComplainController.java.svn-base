package com.crm.controller;

import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.crm.common.BasePageResultVo;
import com.crm.common.BaseResultVo;
import com.crm.common.LigerPageDataVo;
import com.crm.common.ResponseCode;
import com.crm.common.SecurityUtil;
import com.crm.common.Status;
import com.crm.interceptor.BussAnnotation;
import com.crm.interceptor.exception.BaseException;
import com.crm.pojo.GwCustomerComplainModel;
import com.crm.service.GwCustomerComplainService;
import com.crm.util.BaseCodeUtil;
import com.crm.util.DateUtil;
import com.crm.util.ValidateUtil;


/**
 * 
 * GwCustomerComplainController:客户投诉访问控制层
 *
 * @author xiangtao
 * @date 2016年6月20日
 * @version jdk.8
 *
 */
@Controller
@RequestMapping("/customerComplain")
public class GwCustomerComplainController extends BaseException {

	// 日志
	private Logger logger = LoggerFactory.getLogger(GwCustomerComplainController.class);

	/**
	 * 客户投诉业务逻辑
	 */
	@Resource(name = "gwCustomerComplainServiceManage")
	private GwCustomerComplainService gwCustomerComplainServiceImpl;
	
	/**
	 * 
	 * getCustomerComplainById:根据客户投诉id，获取客户投诉信息
	 *
	 * @date 206年3月5日
	 * @param id
	 * @param request
	 * @return
	 */
	@RequestMapping("/getCustomerComplainById.do")
	@ResponseBody
	@BussAnnotation(moduleName="客诉维护",option="获取客诉信息通过ID")
	public BaseResultVo getCustomerComplainById(int id, HttpServletRequest request) {
		BaseResultVo baseResultVo = new BaseResultVo();
		Status status = new Status();
		status.setCode(ResponseCode.OPR_SUCCESS);// 提示代码
		status.setMsg("操作成功");// 提示信息
		status.setDebugMsg("");// bug信息
		status.setUrl("");// url

		if (id == 0) {
			status.setCode(ResponseCode.OPR_FAIL);
			status.setMsg("数据异常");// 提示信息
			baseResultVo.setStatus(status);
			return baseResultVo;
		}

		// 获取客户投诉信息
		GwCustomerComplainModel gwCustomerComplainModel = gwCustomerComplainServiceImpl.selectById(id);
		baseResultVo.setData(gwCustomerComplainModel);
		baseResultVo.setStatus(status);
		return baseResultVo;
	}
	
	/**
	 * generateCode 生成客诉编号
	 * 
	 * @date 2016年6月20日
	 * @param
	 * @return
	 */
	@RequestMapping("/generateCode.do")
	@ResponseBody
	public String generateCode(HttpServletRequest request) {
		// 获取编号前缀
		String frontCode = BaseCodeUtil.getBaseCode("KS");
		// 获取当天时间
		String time = DateUtil.getCurrentDate("");
		String code = "";
		// 根据当天时间查询最后一条记录
		GwCustomerComplainModel gwCusomerComplainModel = gwCustomerComplainServiceImpl.getCusomerComplainByLastOne(time);
		if (gwCusomerComplainModel == null) {
			code = frontCode + "0001";
		} else {
			String subString = gwCusomerComplainModel.getCode().substring(2);
			long num = Long.parseLong(subString) + 1;
			code = "KS" + String.valueOf(num);
		}
		return code;
	}
	
	/**
	 * addCustomerComplain 添加客户投诉
	 * 
	 * @date 2016年6月20日
	 * @param
	 * @return
	 */
	@RequestMapping("/addCustomerComplain.do")
	@ResponseBody
	@BussAnnotation(moduleName="客诉维护",option="添加客诉信息")
	public BaseResultVo addCustomerComplain(GwCustomerComplainModel gwCustomerComplainModel,HttpServletRequest request){
		GwCustomerComplainModel gcm = gwCustomerComplainServiceImpl.getCustomerComplainByCode(gwCustomerComplainModel.getCode());
		if(gcm!=null){
			return BaseResultVo.responseFail("编号已经存在");
		}
		
		Integer userid = SecurityUtil.getAdminUser(request).getUserId();
		gwCustomerComplainModel.setCreateUserId(userid);
		gwCustomerComplainModel.setCreateTime(DateUtil.getCurrentDatetime("-"));
		gwCustomerComplainModel.setUpdateUserId(userid);
		gwCustomerComplainModel.setUpdateTime(DateUtil.getCurrentDatetime("-"));
		gwCustomerComplainModel.setStatus(0);
		gwCustomerComplainServiceImpl.insert(gwCustomerComplainModel);
		
		BaseResultVo baseResultVo = new BaseResultVo();
		
		Status status = new Status();
		status.setCode(ResponseCode.OPR_SUCCESS);// 提示代码
		status.setMsg("操作成功");// 提示信息
		status.setDebugMsg("");// bug信息
		status.setUrl("");// url
		
		baseResultVo.setStatus(status);
		return baseResultVo;
	}
	
	/**
	 * 
	 * delCustomerComplainById:根据客户投诉id，删除客户投诉
	 *
	 * @date 2016年6月20日
	 * @param id
	 *            客户投诉id
	 * @param request
	 * @return
	 */
	@RequestMapping("/delCustomerComplain.do")
	@ResponseBody
	@BussAnnotation(moduleName="客诉维护",option="删除客诉信息")
	public BaseResultVo delCustomerComplainById(int id, HttpServletRequest request) {
		BaseResultVo baseResultVo = new BaseResultVo();
		Status status = new Status();
		status.setCode(ResponseCode.OPR_SUCCESS);// 提示代码
		status.setMsg("操作成功");// 提示信息
		status.setDebugMsg("");// bug信息
		status.setUrl("");// url

		if (id == 0) {
			status.setCode(ResponseCode.OPR_FAIL);
			status.setMsg("数据异常");// 提示信息
			baseResultVo.setStatus(status);
			return baseResultVo;
		}
		
		int num = gwCustomerComplainServiceImpl.deleteById(id);
		if (num < 0) {
			status.setCode(ResponseCode.OPR_FAIL);
			status.setMsg("操作失败");// 提示信息
		}
		baseResultVo.setStatus(status);
		return baseResultVo;
	}
	
	/**
	 * 
	 * updateCustomerComplain:更新客户投诉
	 *
	 * @date 2016年6月20日
	 * @param gwCustomerComplainModel
	 *            客户投诉信息对象
	 * @return
	 */
	@RequestMapping("/updateCustomerComplain.do")
	@ResponseBody
	@BussAnnotation(moduleName="客诉维护",option="更新客诉信息")
	public BaseResultVo updateCustomerComplain(GwCustomerComplainModel gwCustomerComplainModel,HttpServletRequest request) {
		BaseResultVo baseResultVo = new BaseResultVo();
		Status status = new Status();
		status.setCode(ResponseCode.OPR_SUCCESS);// 提示代码
		status.setMsg("操作成功");// 提示信息
		status.setDebugMsg("");// bug信息
		status.setUrl("");// url

		// 验证主键是否为空
		if (gwCustomerComplainModel.getId() == 0) {
			status.setCode(ResponseCode.OPR_FAIL);
			status.setMsg("数据异常");
			baseResultVo.setStatus(status);
			return baseResultVo;
		}

		// 更新时间
		gwCustomerComplainModel.setUpdateTime(DateUtil.getCurrentDatetime("-"));
		int userid = SecurityUtil.getAdminUser(request).getUserId();
		gwCustomerComplainModel.setUpdateUserId(userid);

		// 更新客户投诉信息
		gwCustomerComplainServiceImpl.update(gwCustomerComplainModel);
		baseResultVo.setStatus(status);
		return baseResultVo;
	}

	/**
	 * 
	 * getCustomerComplainList:获取客户投诉集合（分页）
	 *
	 * @date 2016年6月20日
	 * @param page
	 *            当前页码数
	 * @param pagesize
	 *            每页显示记录数
	 * @param request
	 * @return
	 */
	@RequestMapping("/getCustomerComplainList.do")
	@ResponseBody
	@BussAnnotation(moduleName="客诉维护",option="获取客诉信息集合")
	public LigerPageDataVo getCustomerComplainList(int currentPage, int pageSize,String customerName,String cardCode, HttpServletRequest request) {
		// 条件参数
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("currentPage", currentPage);
		params.put("pageSize", pageSize);
		
		params.put("customerName", customerName);
		params.put("cardCode", cardCode);

		BasePageResultVo baseResultVo = gwCustomerComplainServiceImpl.selectPageList(params);
		// liger ui 分页格式数据
		LigerPageDataVo data = new LigerPageDataVo();
		data.setRows(baseResultVo.getRows());
		data.setTotal(baseResultVo.getPageInfo().getTotalRecord());
		return data;
	}
}
