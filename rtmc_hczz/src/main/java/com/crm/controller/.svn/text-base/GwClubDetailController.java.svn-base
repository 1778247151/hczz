package com.crm.controller;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.crm.common.AdminUser;
import com.crm.common.BasePageResultVo;
import com.crm.common.BaseResultVo;
import com.crm.common.LigerPageDataVo;
import com.crm.common.ResponseCode;
import com.crm.common.SecurityUtil;
import com.crm.common.Status;
import com.crm.interceptor.BussAnnotation;
import com.crm.interceptor.exception.BaseException;
import com.crm.pojo.GwGoodsInStoreModel;
import com.crm.pojo.GwformatstreeModel;
import com.crm.pojo.GwClubDetailModel;
import com.crm.service.GwClubDetailService;
import com.crm.service.GwformatstreeService;
import com.crm.util.BaseCodeUtil;
import com.crm.util.DateUtil;

/**
 * 
 * GwClubDetailDetailController:俱乐部明细控制层
 *
 * @author hanzhiqiang
 * @date 2016年11月14日
 * @version jdk.8
 *
 */
@Controller
@RequestMapping("/clubDetail")
public class GwClubDetailController  extends BaseException {
	// 日志
		private Logger logger = LoggerFactory.getLogger(GwClubDetailController.class);
	/**
	 * 管理业务逻辑
	 */
	@Resource(name = "gwClubDetailServiceManage")
	private GwClubDetailService gwClubDetailServiceImpl;
	/**
	 * 业态业务逻辑层
	 */
	@Resource(name="gwformatstreeService")
	private GwformatstreeService gwformatstreeService;
		/**
		 *
		 * getClubDetailList:获取信息列表（分页）
		 *
		 * @author   hanzhiqiang
		 * @date     2016年11月8日
		 *
		 * @param currentPage  
		 * 					当前页
		 * @param pageSize  
		 * 				每页记录数
		 * @return
		 */
		@RequestMapping("/getClubDetailList.do")
		@ResponseBody
		public LigerPageDataVo getClubDetailList(String type,int currentPage, int pageSize, HttpServletRequest request) {
			// 条件参数
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("currentPage", currentPage);
			params.put("pageSize", pageSize);
			params.put("type", type);
			
			BasePageResultVo baseResultVo = gwClubDetailServiceImpl.selectPageList(params);
			// liger ui 分页格式数据
			LigerPageDataVo data = new LigerPageDataVo();
			data.setRows(baseResultVo.getRows());
			data.setTotal(baseResultVo.getPageInfo().getTotalRecord());
			return data;
		}
		
		/**
		 * 获取俱乐部设置适用范围数据分页集合
		 * @author hanzhiqiang
		 * @param  currentPage
		 * @param  pageSize
		 * @return
		 */
		@RequestMapping("/getClubDetailByPageList.do")
		@ResponseBody
		@BussAnnotation(moduleName="俱乐部设置适用范围",option="获取列表")
		public LigerPageDataVo getClubDetailByPageList(int currentPage,int pageSize,String gradeCode,String type){
			//条件参数
			Map<String, Object> params=new HashMap<String, Object>();
			params.put("currentPage", currentPage);
			params.put("pageSize", pageSize);
			params.put("gradeCode", gradeCode);
			if(type.equals("0")){
				params.put("type","0");
			}else if(type.equals("1")){
				params.put("type1",1);
			}
			
			BasePageResultVo baseResultVo=gwClubDetailServiceImpl.selectPageList(params);
			//liger ui 分页格式数据
			LigerPageDataVo data=new LigerPageDataVo();
			data.setRows(baseResultVo.getRows());
			data.setTotal(baseResultVo.getPageInfo().getTotalRecord());
			return data;
		}
		
		/**
		 *
		 * addClubDetail:添加
		 *
		 * @author   hanzhiqiang
		 * @date     2016年11月14日
		 *
		 * @param currentPage  
		 * 					当前页
		 * @param pageSize  
		 * 				每页记录数
		 * @return
		 */
		@RequestMapping("/addClubDetail.do")
		@ResponseBody
		public BaseResultVo addClubDetail(GwClubDetailModel gwClubDetailModel,HttpServletRequest request) throws CloneNotSupportedException{
			String typeCode = gwClubDetailModel.getTypeCode();
			if(typeCode=="" || typeCode==null){
				return BaseResultVo.responseFail("没有选择业态或商铺信息");
			}
			String[] array = typeCode.split(";");
			List<GwClubDetailModel> clubDetailList = new ArrayList<GwClubDetailModel>();
			if(gwClubDetailModel.getType()==0){
				List<GwformatstreeModel> formatstreeList=gwformatstreeService.getAllList();
				for (int i = 0; i < array.length; i++) {
					GwClubDetailModel model=gwClubDetailModel.clone();
					for (GwformatstreeModel formatModel : formatstreeList) {
						if(formatModel.getId()==Integer.parseInt(array[i])){
							model.setTypeCode(formatModel.getBm());
							clubDetailList.add(model);
							break;
						}
					}
				}
			}
			else{
				for (int i = 0; i < array.length; i++) {
					GwClubDetailModel grade = null;
					try {
						grade = gwClubDetailModel.clone();
					} catch (CloneNotSupportedException e) {
						return BaseResultVo.responseFail("克隆失败");
					}
					grade.setTypeCode(array[i]);
					clubDetailList.add(grade);
				}
			}
			//批量插入
			int number = gwClubDetailServiceImpl.batchInsertClubDetail(clubDetailList);
			if(number==0){
				return BaseResultVo.responseFail("添加失败");
			}
			return BaseResultVo.responseSuccess("添加成功");
		}
		
		/**
		 * 
		 * getClubDetailById:根据id，获取信息
		 *
		 * @author   hanzhiqiang
		 * @date     2016年11月14日
		 * @param id
		 * @param request
		 * @return
		 */
		@RequestMapping("/getClubDetailById.do")
		@ResponseBody
		public BaseResultVo getClubDetailById(int id, HttpServletRequest request) {
			if(id==0){
				return BaseResultVo.responseFail("参数异常");
			}
			//获取信息
			GwClubDetailModel ClubDetail=gwClubDetailServiceImpl.selectById(id);
			if(ClubDetail==null){
				return BaseResultVo.responseFail("获取信息失败");
			}
			BaseResultVo baseResultVo=BaseResultVo.responseSuccess("获取信息成功");
			baseResultVo.setData(ClubDetail);
			return baseResultVo;
		}
		/**
		 * 
		 * deleteClubDetailById:根据id，删除信息
		 *
		 * @author   hanzhiqiang
		 * @date     2016年11月14日
		 *
		 * @param id
		 * @param request
		 * @return
		 */
		@RequestMapping("/deleteClubDetailById.do")
		@ResponseBody
		public BaseResultVo deleteClubDetailById(Integer id) {
			if(id==0){
				return BaseResultVo.responseFail("参数异常");
			}
			int number = gwClubDetailServiceImpl.deleteClubDetailById(id);
			if(number==0){
				return BaseResultVo.responseFail("删除失败");
			}
			return BaseResultVo.responseSuccess("删除成功");
			
		}
		
		/**
		 * 
		 * updateClubDetail:更新信息
		 *
		 * @author   hanzhiqiang
		 * @date     2016年11月9日
		 *
		 * @return
		 */
		@RequestMapping("/updateClubDetail.do")
		@ResponseBody
		public BaseResultVo updateClubDetail(GwClubDetailModel gwClubDetailModel,HttpServletRequest request) {
			if(gwClubDetailModel.getId()==null){
				return BaseResultVo.responseFail("ID为空");
			}
			int number = gwClubDetailServiceImpl.update(gwClubDetailModel);
			if(number==0){
				return BaseResultVo.responseFail("更新失败");
			}
			return BaseResultVo.responseSuccess("更新成功");
		}
		
}
